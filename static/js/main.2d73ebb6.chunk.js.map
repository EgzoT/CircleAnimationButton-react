{"version":3,"sources":["CircleAnimationButton-react/CircleAnimationButtonTemplate.js","CircleAnimationButton-react/CircleAnimationButton.js","CircleAnimationButton-react/CircleAnimationButtons.js","CircleAnimationButton-react/IconFA.js","App.js","index.js"],"names":["styleTemplate","container","containerHover","circleContainer","textContainer","textContainerHover","text","textHover","CircleAnimationButtonTemplate","props","assignStyle","newStyle","style","Object","assign","mouseEnter","setState","hover","mouseLeave","alwaysVisibleText","isMobileDevice","test","navigator","userAgent","mainContainerStyle","height","width","backgroundColor","containerColor","borderRadius","cursor","display","alignItems","boxShadow","borderColor","transition","animationTime","fullStyle","mainContainerHoverStyle","circleContainerStyle","background","linearGradient","color","iconColor","textContainerStyle","textContainerHoverStyle","autoWidth","textStyle","visibility","margin","textAlign","verticalAlign","opacity","userSelect","textColor","textHoverStyle","marginLeft","marginRight","direction","state","this","onMouseEnter","onMouseLeave","onClick","icon","React","Component","styleColors","skyBlue","gradientColor","gray","coralBlue","deepSea","steelPurple","springForest","CircleAnimationButton","CircleAnimationButtonDanger","CircleAnimationButtonSuccess","CircleAnimationButtonWarning","CircleAnimationButtonPrimary","CircleAnimationButtonDark","CircleAnimationButtonLight","CircleAnimationButtonInfo","IconFA","iconStyle","size","rotation","flip","pull","fixedWidth","inverse","listItem","spin","pulse","border","swapOpacity","className","transform","mask","symbol","app","appMainContainer","minHeight","flexDirection","justifyContent","overflowY","fontSize","smallTextStyle","testClick","padding","marginTop","deviceTypeStyle","paddingLeft","paddingRight","App","onChangeValue","value","hexColor","colorId","onTestClick","isMobile","paddingDown","marginBottom","faStop","faCheck","faPause","language","atomDark","faMouse","faArrowCircleLeft","faExpandAlt","faExpand","faTachometerAlt","faPalette","faTools","faPaintBrush","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d73ebb6.chunk.js","sourcesContent":["import React from 'react';\n\nconst styleTemplate = {\n    container: {},\n    containerHover: {},\n    circleContainer: {},\n    textContainer: {},\n    textContainerHover: {},\n    text: {},\n    textHover: {}\n}\n\nclass CircleAnimationButtonTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fullStyle = this.assignStyle(this.props.fullStyle); //Object.assign(styleTemplate, this.props.fullStyle);\n        this.alwaysVisibleText = this.isMobileDevice() || this.props.alwaysVisibleText;\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.autoWidth ? 'max-content' : this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#787875\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#424241\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #424241, #333332\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#FFFFFF\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#FFFFFF\";\n        this.direction = this.props.direction === \"left\" ? 1 : 0;\n\n        this.state = {\n            hover: this.alwaysVisibleText ? true : false\n        };\n    }\n\n    assignStyle = (newStyle) => {\n        let style = Object.assign({}, styleTemplate);\n        Object.assign(style, newStyle);\n\n        return style;\n    }\n\n    mouseEnter = () => {\n        this.setState({ hover: true });\n    }\n\n    mouseLeave = () => {\n        //Off hide text when mobile device\n        if (this.alwaysVisibleText) {\n            return;\n        }\n\n        this.setState({ hover: false });\n    }\n\n    isMobileDevice = () => {\n        return /Android|webOS|iPhone|iPad|iPod/i.test(navigator.userAgent) ? true : false;\n    }\n\n    mainContainerStyle = () => {\n        let style = {\n            height: this.height,\n            width: this.height,\n            backgroundColor: this.containerColor,\n            borderRadius: this.height,\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            boxShadow: '0px 0px 0px 1px ' + this.borderColor,\n            transition: \"width \" + this.animationTime + \"s\"\n        }\n\n        if (this.props.style) {\n            style = { ...style, ...this.props.style }\n        }\n\n        style = { ...style, ...this.fullStyle['container'] };\n\n        return style;\n    }\n\n    mainContainerHoverStyle = () => {\n        let style = {\n            height: this.height,\n            width: this.width,\n            backgroundColor: this.containerColor,\n            borderRadius: this.height,\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            boxShadow: '0px 0px 0px 1px ' + this.borderColor,\n            transition: \"width \" + this.animationTime + \"s\"\n        }\n\n        if (this.props.style) {\n            style = { ...style, ...this.props.style }\n        }\n\n        style = { ...style, ...this.fullStyle['containerHover'] };\n\n        return style;\n    }\n\n    circleContainerStyle = () => {\n        let style = {\n            height: this.height,\n            width: this.height,\n            background: 'linear-gradient(' + this.linearGradient + ')',\n            borderRadius: this.height,\n            alignItems: 'center',\n            display: 'flex',\n            boxShadow: '0px 0px 0px 2px ' + this.borderColor,\n            color: this.iconColor\n        }\n\n        style = { ...style, ...this.fullStyle['circleContainer'] };\n\n        return style;\n    }\n\n    textContainerStyle = () => {\n        let style = {\n            display: 'flex',\n            height: this.height,\n            width: 0,\n            transition: \"width \" + this.animationTime + \"s\"\n        }\n\n        style = { ...style, ...this.fullStyle['textContainer'] };\n\n        return style;\n    }\n\n    textContainerHoverStyle = () => {\n        let style = {\n            display: 'flex',\n            height: this.height,\n            width: this.props.autoWidth ? 'calc(100% - ' + this.height + 'px)' : this.width - this.height,\n            transition: \"width \" + this.animationTime + \"s\"\n        }\n\n        style = { ...style, ...this.fullStyle['textContainerHover'] };\n\n        return style;\n    }\n\n    textStyle = () => {\n        let style = {\n            visibility: 'hidden',\n            margin: 'auto',\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            opacity: 0,\n            userSelect: 'none',\n            color: this.textColor,\n            transition: \"visibility \" + this.animationTime / 2 + \"s, opacity \" + this.animationTime / 2 + \"s\"\n        }\n\n        if (this.props.autoWidth) {\n            style = { ...style, ...{ transition: \"opacity 0s\" } }\n        }\n\n        style = { ...style, ...this.fullStyle['text'] };\n\n        return style;\n    }\n\n    textHoverStyle = () => {\n        let style = {\n            visibility: 'visible',\n            margin: 'auto',\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            opacity: 1.0,\n            userSelect: 'none',\n            color: this.textColor,\n            transition: \"visibility 0s, opacity \" + this.animationTime * 2 + \"s\"\n        }\n\n        if (this.props.autoWidth) {\n            style = { ...style, ...{ marginLeft: 10, marginRight: 10 } }\n        }\n\n        style = { ...style, ...this.fullStyle['textHover'] };\n\n        return style;\n    }\n\n    render() {\n        return (\n            <div\n                style={ !this.state.hover ? this.mainContainerStyle() : this.mainContainerHoverStyle() }\n                onMouseEnter={ this.mouseEnter }\n                onMouseLeave={ this.mouseLeave }\n                onClick={ this.props.onClick }\n            >\n                { this.direction === 1 ?\n                <div style={ !this.state.hover ? this.textContainerStyle() : this.textContainerHoverStyle() }>\n                    <div style={ !this.state.hover ? this.textStyle() : this.textHoverStyle() }>{ this.props.text }</div>\n                </div>\n                : null }\n                <div style={ this.circleContainerStyle() }>\n                    { this.props.icon }\n                </div>\n                { this.direction === 0 ?\n                <div style={ !this.state.hover ? this.textContainerStyle() : this.textContainerHoverStyle() }>\n                    <div\n                        style={ !this.state.hover ? this.textStyle() : this.textHoverStyle() }\n                        onMouseEnter={ null }\n                        onMouseLeave={ null }\n                    >{ this.props.text }</div>\n                </div>\n                : null }\n            </div>\n        );\n    }\n}\n\nexport default CircleAnimationButtonTemplate;\n","import React from 'react';\n\nimport CircleAnimationButtonTemplate from './CircleAnimationButtonTemplate';\n\nconst styleColors = {\n    skyBlue: {\n        borderColor: \"#385D6B\",\n        containerColor: \"#81D6F7\",\n        gradientColor: \"#6DB5D1\",\n        textColor: \"#000000\"\n    },\n    gray: {\n        borderColor: \"#6B6B6B\",\n        containerColor: \"#818181\",\n        gradientColor: \"#D1D1D1\",\n        textColor: \"#000000\"\n    },\n    coralBlue: {\n        borderColor: \"#15406B\",\n        containerColor: \"#2A7DD1\",\n        gradientColor: \"#3399FF\",\n        textColor: \"#000000\"\n    },\n    deepSea: {\n        borderColor: \"#013D6B\",\n        containerColor: \"#01579B\",\n        gradientColor: \"#0277D1\",\n        textColor: \"#FFFFFF\"\n    },\n    steelPurple: {\n        borderColor: \"#50506B\",\n        containerColor: \"#9999CC\",\n        gradientColor: \"#9D9DD1\",\n        textColor: \"#000000\"\n    },\n    springForest: {\n        borderColor: \"#2D6B30\",\n        containerColor: \"#43A047\",\n        gradientColor: \"#58D15E\",\n        textColor: \"#000000\"\n    }\n}\n\nexport class CircleAnimationButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.color = this.props.color ? this.props.color : \"skyBlue\";\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : styleColors[this.color].borderColor;\n        this.containerColor = this.props.containerColor ? this.props.containerColor : styleColors[this.color].containerColor;\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, \" + styleColors[this.color].containerColor + \", \" + styleColors[this.color].gradientColor;\n        this.iconColor = this.props.iconColor ? this.props.iconColor : styleColors[this.color].textColor;\n        this.textColor = this.props.textColor ? this.props.textColor : styleColors[this.color].textColor;\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport default CircleAnimationButton;\n","import React from 'react';\n\nimport CircleAnimationButtonTemplate from './CircleAnimationButtonTemplate';\n\nexport class CircleAnimationButtonDanger extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#6B1515\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#FF3333\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #FF3333, #D12A2A\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonSuccess extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#236B20\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#50F74A\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #50F74A, #44D13F\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonWarning extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#6B6B17\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#F7F734\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #F7F734, #D1D12C\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonPrimary extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#25446B\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#579FF7\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #579FF7, #4986D1\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonDark extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#787875\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#424241\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #424241, #333332\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#FFFFFF\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#FFFFFF\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonLight extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#474746\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#DEDED9\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #DEDED9, #ADADAA\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#22444D\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#64CAE3\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #64CAE3, #4F9FB3\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass IconFA extends React.Component {\n    iconStyle = () => {\n        let style = {\n            margin: 'auto'\n        }\n\n        style = { ...style, ...this.props.style };\n\n        return style;\n    }\n\n    render() {\n        return (\n            <FontAwesomeIcon\n                style={ this.iconStyle() }\n                icon={ this.props.icon }\n                size={ this.props.size }\n                rotation={ this.props.rotation }\n                flip={ this.props.flip }\n                pull={ this.props.pull }\n                fixedWidth={ this.props.fixedWidth }\n                inverse={ this.props.inverse }\n                listItem={ this.props.listItem }\n                spin={ this.props.spin }\n                pulse={ this.props.pulse }\n                border={ this.props.border }\n                swapOpacity={ this.props.swapOpacity }\n                className={ this.props.className }\n                transform={ this.props.transform }\n                mask={ this.props.mask }\n                color={ this.props.color }\n                symbol={ this.props.symbol }\n            />\n        );\n    }\n}\n\nexport default IconFA;\n","import React from 'react';\n\nimport CircleAnimationButton from './CircleAnimationButton-react/CircleAnimationButton';\nimport { CircleAnimationButtonDanger, CircleAnimationButtonSuccess, CircleAnimationButtonWarning, CircleAnimationButtonPrimary, CircleAnimationButtonDark, CircleAnimationButtonLight, CircleAnimationButtonInfo } from './CircleAnimationButton-react/CircleAnimationButtons';\nimport CircleAnimationButtonTemplate from './CircleAnimationButton-react/CircleAnimationButtonTemplate';\nimport IconFA from './CircleAnimationButton-react/IconFA'\n\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport { faStop, faCheck, faPause, faMouse, faArrowCircleLeft, faExpandAlt, faExpand, faTachometerAlt, faPalette, faTools, faPaintBrush } from \"@fortawesome/free-solid-svg-icons\";\n\nconst app = {\n    textAlign: 'center'\n}\n\nconst appMainContainer = {\n    backgroundColor: '#282c34',\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflowY: 'auto'\n}\n\nconst textStyle = {\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white'\n}\n\nconst smallTextStyle = {\n    fontSize: 'calc(10px + 1vmin)',\n    color: 'white'\n}\n\nconst testClick = {\n    backgroundColor: \"#00000060\",\n    color: \"white\",\n    padding: 15,\n    marginTop: 15,\n    fontSize: 'calc(10px + 1vmin)',\n    borderRadius: 20\n}\n\nconst deviceTypeStyle = {\n    paddingLeft: 25,\n    paddingRight: 25,\n    marginTop: 25,\n    backgroundColor: \"#00FF0040\",\n    borderRadius: 40\n}\n\nconst code0 = \"<CircleAnimationButtonDanger\\n\\ticon={ <IconFA icon={ faStop }/> }\\n\\ttext={ \\\"Cancel\\\" }\\n\\tstyle={{ marginTop: 10 }}\\n/>\\n\\n<CircleAnimationButtonSuccess\\n\\ticon={ <IconFA icon={ faCheck }/> }\\n\\ttext={ \\\"Ok\\\" }\\n\\tstyle={{ marginTop: 10 }}\\n/>\\n\\n<CircleAnimationButtonWarning\\n\\ticon={ <IconFA icon={ faPause }/> }\\n\\ttext={ \\\"Wait\\\" }\\n\\tstyle={{ marginTop: 10 }}\\n/>\";\nconst code1 = \"<CircleAnimationButtonPrimary\\n\\ticon={ <IconFA icon={ faMouse }/> }\\n\\ttext={ \\\"Click\\\" }\\n\\tonClick={ this.onTestClick }\\n/>\";\nconst code2 = \"<CircleAnimationButtonDark\\n\\ticon={ <IconFA icon={ faArrowCircleLeft }/> }\\n\\ttext={ \\\"Left\\\" }\\n\\tdirection={ \\\"left\\\" }\\n/>\";\nconst code3 = \"<CircleAnimationButtonLight\\n\\ticon={ <IconFA icon={ faExpandAlt }/> }\\n\\ttext={ \\\"Expanded\\\" }\\n\\talwaysVisibleText={ true }\\n\\tautoWidth={ true }\\n/>\";\nconst code4 = \"<CircleAnimationButton\\n\\ticon={ <IconFA icon={ faExpand } size={ \\\"2x\\\" }/> }\\n\\ttext={ \\\"Width/height change\\\" }\\n\\tcolor={ \\\"steelPurple\\\" }\\n\\theight={ 50 }\\n\\twidth={ 250 }\\n/>\";\nconst code5 = \"<CircleAnimationButton\\n\\ticon={ <IconFA icon={ faExpand }/> }\\n\\ttext={ \\\"Animation time\\\" }\\n\\tcolor={ \\\"deepSea\\\" }\\n\\twidth={ 170 }\\n\\tanimationTime={ 3 }\\n/>\";\nconst code6 = \"<CircleAnimationButtonInfo\\n\\ticon={ <IconFA icon={ faPalette }/> }\\n\\ttext={ \\\"Styling\\\" }\\n\\tstyle={{ marginTop: 20, marginBottom: 20 }}\\n/>\";\nconst code7 = \"<CircleAnimationButton\\n\\ticon={ <IconFA icon={ faTools }/> }\\n\\ttext={ \\\"Styling\\\" }\\n\\tcolor={ \\\"springForest\\\" }\\n\\tfullStyle={{\\n\\t\\tcontainer: { backgroundColor: 'red', boxShadow: 'none' },\\n\\t\\tcontainerHover: { backgroundColor: 'red', boxShadow: 'none' },\\n\\t\\tcircleContainer: {},\\n\\t\\ttextContainer: {},\\n\\t\\ttextContainerHover: {},\\n\\t\\ttext: {},\\n\\t\\ttextHover: {}\\n\\t}}\\n/>\";\nconst code8 = \"<CircleAnimationButton\\n\\ticon={ <div style={{ margin: \\\"auto\\\" }}>( ͡° ͜ʖ ͡°)</div> }\\n\\ttext={ \\\"Own text\\\" }\\n\\tcolor={ \\\"skyBlue\\\" }\\n\\twidth={ 150 }\\n\\theight={ 55 }\\n/>\";\nconst code9 = \"<CircleAnimationButtonTemplate\\n\\ticon={ <IconFA icon={ faPaintBrush }/> }\\n\\ttext={ \\\"Paint\\\" }\\n\\tborderColor={ \\\"#000000\\\" }\\n\\tcontainerColor={ \\\"#424242\\\" }\\n\\tlinearGradient={ \\\"0deg, #FF0000, #FF00FF\\\" }\\n\\ticonColor={ \\\"#33ffff\\\" }\\n\\ttextColor={ \\\"#99ffff\\\" }\\n/>\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.isMobile = this.isMobileDevice();\n\n        this.state = {\n            testClick: false\n        }\n    }\n\n    onChangeValue = (value, hexColor) => {\n        this.setState({ colorId: value, hexColor: hexColor });\n    }\n\n    onTestClick = () => {\n        this.setState({ testClick: !this.state.testClick });\n    }\n\n    isMobileDevice = () => {\n        return /Android|webOS|iPhone|iPad|iPod/i.test(navigator.userAgent) ? true : false;\n    }\n\n    render() {\n        return (\n            <div style={ app }>\n                <div style={ appMainContainer }>\n                    <div style={ deviceTypeStyle }>\n                        <p style={ textStyle }>\n                            { this.isMobile ? \"Mobile view\" : \"Desktop view\" }\n                        </p>\n                        { this.isMobile ?\n                        <p style={{ color: 'red', paddingDown: 5 }}>\n                            For mobile devices button always will be expanded (detect mobile device), because mobile devices don't use hover gesture.\n                        </p>\n                        : null }\n                    </div>\n\n                    <p style={ textStyle }>\n                        Example <code>CircleAnimationButton-react</code>\n                    </p>\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <CircleAnimationButtonDanger\n                        icon={ <IconFA icon={ faStop }/> }\n                        text={ \"Cancel\" }\n                        style={{ marginTop: 10 }}\n                    />\n\n                    <CircleAnimationButtonSuccess\n                        icon={ <IconFA icon={ faCheck }/> }\n                        text={ \"Ok\" }\n                        style={{ marginTop: 10 }}\n                    />\n\n                    <CircleAnimationButtonWarning\n                        icon={ <IconFA icon={ faPause }/> }\n                        text={ \"Wait\" }\n                        style={{ marginTop: 10 }}\n                    />\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code0 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Test onClick\n                    </p>\n\n                    <CircleAnimationButtonPrimary\n                        icon={ <IconFA icon={ faMouse }/> }\n                        text={ \"Click\" }\n                        onClick={ this.onTestClick }\n                    />\n\n                    { this.state.testClick ?\n                    <div style={ testClick }>Clicked</div>\n                    : null}\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code1 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Expand to left\n                    </p>\n\n                    <CircleAnimationButtonDark\n                        icon={ <IconFA icon={ faArrowCircleLeft }/> }\n                        text={ \"Left\" }\n                        direction={ \"left\" } \n                    />\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code2 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Always expanded\n                    </p>\n\n                    <CircleAnimationButtonLight\n                        icon={ <IconFA icon={ faExpandAlt }/> }\n                        text={ \"Expanded\" }\n                        alwaysVisibleText={ true }\n                        autoWidth={ true }\n                    />\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <p style={ smallTextStyle }>\n                        To better effect add <code style={{ color: 'red' }}>autoWidth = true</code> to auto fit component to text\n                    </p>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code3 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Width/height change\n                    </p>\n\n                    <CircleAnimationButton\n                        icon={ <IconFA icon={ faExpand } size={ \"2x\" }/> }\n                        text={ \"Width/height change\" }\n                        color={ \"steelPurple\" }\n                        height={ 50 }\n                        width={ 250 }\n                    />\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code4 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Animation time\n                    </p>\n\n                    <CircleAnimationButton\n                        icon={ <IconFA icon={ faTachometerAlt }/> }\n                        text={ \"Animation time\" }\n                        color={ \"deepSea\" }\n                        width={ 170 }\n                        animationTime={ 3 }\n                    />\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code5 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Fast styling\n                    </p>\n\n                    <CircleAnimationButtonInfo\n                        icon={ <IconFA icon={ faPalette }/> }\n                        text={ \"Styling\" }\n                        style={{ marginTop: 20, marginBottom: 20 }}\n                    />\n\n                    <p style={ smallTextStyle }>\n                        Stylize like normal HTML element\n                    </p>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code6 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Full styling\n                    </p>\n\n                    <CircleAnimationButton\n                        icon={ <IconFA icon={ faTools }/> }\n                        text={ \"Styling\" }\n                        color={ \"springForest\" }\n                        fullStyle={{\n                            container: { backgroundColor: 'red', boxShadow: 'none' },\n                            containerHover: { backgroundColor: 'red', boxShadow: 'none' },\n                            circleContainer: {},\n                            textContainer: {},\n                            textContainerHover: {},\n                            text: {},\n                            textHover: {}\n                        }}\n                    />\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code7 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Own icon/component\n                    </p>\n\n                    <CircleAnimationButton\n                        icon={ <div style={{ margin: \"auto\" }}>( ͡° ͜ʖ ͡°)</div> }\n                        text={ \"Own text\" }\n                        color={ \"skyBlue\" }\n                        width={ 150 }\n                        height={ 55 }\n                    />\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code8 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Own color style\n                    </p>\n\n                    <CircleAnimationButtonTemplate\n                        icon={ <IconFA icon={ faPaintBrush }/> }\n                        text={ \"Paint\" }\n                        borderColor={ \"#000000\" }\n                        containerColor={ \"#424242\" }\n                        linearGradient={ \"0deg, #FF0000, #FF00FF\" }\n                        iconColor={ \"#33ffff\" }\n                        textColor={ \"#99ffff\" }\n                    />\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code9 }\n                    </SyntaxHighlighter>\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}